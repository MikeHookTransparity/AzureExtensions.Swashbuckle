<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestFunction</name>
    </assembly>
    <members>
        <member name="T:TestFunction.Models.TestModel">
            <summary>
            Some model
            </summary>
        </member>
        <member name="P:TestFunction.Models.TestModel.Id">
            <summary>
                Id (example)
            </summary>
            <example>3</example>
        </member>
        <member name="P:TestFunction.Models.TestModel.Name">
            <summary>
                Name (example)
            </summary>
            <example>John</example>
        </member>
        <member name="P:TestFunction.Models.TestModel.Description">
            <summary>
                Description (example)
            </summary>
            <example>Sometimes human</example>
        </member>
        <member name="M:TestFunction.SwaggerController.SwaggerOAuth2Redirect(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)">
            <summary>
            This is only needed for OAuth2 client. This redirecting document is normally served
            as a static content. Functions don't provide this out of the box, so we serve it here.
            Don't forget to set OAuth2RedirectPath configuration option to reflect this route.
            </summary>
            <param name="req"></param>
            <param name="swashBuckleClient"></param>
            <returns></returns>
        </member>
        <member name="M:TestFunction.TestController.Get(System.Int32,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            TestGet Function
            </summary>
            <param name="request">some request</param>
            <param name="id"> some id </param>
            <remarks>Awesomeness!</remarks>
            <response code="200">Product created</response>
        </member>
        <member name="M:TestFunction.TestController.Get2(System.Int32,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            TestGet Function
            </summary>
            <param name="request">some request</param>
            <param name="id"> some id </param>
            <remarks>Awesomeness!</remarks>
            <response code="200">Product created</response>
        </member>
        <member name="M:TestFunction.DirectFunctionExecutor.ExecuteAsync(Microsoft.Azure.Functions.Worker.FunctionContext)">
            <inheritdoc/>
        </member>
        <member name="T:TestFunction.FunctionExecutorHostBuilderExtensions">
            <summary>
            Extension methods to enable registration of the custom <see cref="T:Microsoft.Azure.Functions.Worker.Invocation.IFunctionExecutor"/> implementation generated for the current worker.
            </summary>
        </member>
        <member name="M:TestFunction.FunctionExecutorHostBuilderExtensions.ConfigureGeneratedFunctionExecutor(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
             Configures an optimized function executor to the invocation pipeline.
            </summary>
        </member>
        <member name="T:TestFunction.FunctionExecutorAutoStartup">
            <summary>
            Auto startup class to register the custom <see cref="T:Microsoft.Azure.Functions.Worker.Invocation.IFunctionExecutor"/> implementation generated for the current worker.
            </summary>
        </member>
        <member name="M:TestFunction.FunctionExecutorAutoStartup.Configure(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            Configures the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/> to use the custom <see cref="T:Microsoft.Azure.Functions.Worker.Invocation.IFunctionExecutor"/> implementation generated for the current worker.
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/> instance to use for service registration.</param>
        </member>
        <member name="T:TestFunction.GeneratedFunctionMetadataProvider">
            <summary>
            Custom <see cref="T:Microsoft.Azure.Functions.Worker.Core.FunctionMetadata.IFunctionMetadataProvider"/> implementation that returns function metadata definitions for the current worker."/>
            </summary>
        </member>
        <member name="M:TestFunction.GeneratedFunctionMetadataProvider.GetFunctionMetadataAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:TestFunction.WorkerHostBuilderFunctionMetadataProviderExtension">
            <summary>
            Extension methods to enable registration of the custom <see cref="T:Microsoft.Azure.Functions.Worker.Core.FunctionMetadata.IFunctionMetadataProvider"/> implementation generated for the current worker.
            </summary>
        </member>
        <member name="M:TestFunction.WorkerHostBuilderFunctionMetadataProviderExtension.ConfigureGeneratedFunctionMetadataProvider(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
             Adds the GeneratedFunctionMetadataProvider to the service collection.
             During initialization, the worker will return generated function metadata instead of relying on the Azure Functions host for function indexing.
            </summary>
        </member>
        <member name="T:TestFunction.FunctionMetadataProviderAutoStartup">
            <summary>
            Auto startup class to register the custom <see cref="T:Microsoft.Azure.Functions.Worker.Core.FunctionMetadata.IFunctionMetadataProvider"/> implementation generated for the current worker.
            </summary>
        </member>
        <member name="M:TestFunction.FunctionMetadataProviderAutoStartup.Configure(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            Configures the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/> to use the custom <see cref="T:Microsoft.Azure.Functions.Worker.Core.FunctionMetadata.IFunctionMetadataProvider"/> implementation generated for the current worker.
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/> instance to use for service registration.</param>
        </member>
    </members>
</doc>
